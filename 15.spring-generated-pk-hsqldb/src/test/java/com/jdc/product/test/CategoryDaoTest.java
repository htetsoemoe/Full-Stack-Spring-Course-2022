package com.jdc.product.test;

import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import static org.junit.jupiter.api.Assertions.*;

import java.util.List;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcOperations;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;

import com.jdc.product.config.ApplicationConfig;
import com.jdc.product.model.dao.CategoryDao;
import com.jdc.product.model.dto.Category;

@SpringJUnitConfig(classes = ApplicationConfig.class)
@TestMethodOrder(OrderAnnotation.class)
public class CategoryDaoTest {
	
	@Autowired
	private JdbcOperations jdbc;
	@Autowired
	private CategoryDao dao;
	
	@Test
	@DisplayName("1. Create Category")
	@Order(1)
	void test1() {
		var category = new Category();
		category.setName("Food");
		
		var id = dao.create(category);
		assertEquals(1, id);
	}
	
	@Test
	@DisplayName("2. Update Category")
	@Order(2)
	void test2() {
		var category = new Category();
		category.setId(1);
		category.setName("Drinks");
		
		var count = dao.update(category);
		assertEquals(1, count);
	}
	
	@Test
	@DisplayName("3. Find Category by ID")
	@Order(3)
	void test3() {
		Category c = dao.findById(1);
		assertEquals("Drinks", c.getName());
	}
	
	@Test
	@DisplayName("4. Find Category Find By Name Like")
	@Order(4)
	void test4() {
		List<Category> list = dao.findByNameLike("Drin");
		assertEquals(1, list.size());
	}
	
	@Test
	@DisplayName("5. Find Count by Name Like")
	@Order(5)
	void test5() {
		int count = dao.findCountByNameLike("Drin");
		assertEquals(1, count);
	}
	
	@Test
	@DisplayName("6. Delete by Id")
	@Order(6)
	void test6() {
		int count = dao.delete(1);
		assertEquals(1, count);
	}
}


/* 
 This code in test1()
		// Before not using "generated by default as identity(start with 1)" for auto_generated key in HSQL (database.sql)
		List<Object[]> params = new ArrayList<>();
				params.add(new Object[] {1, "Foods"});
		params.add(new Object[] {2, "Drinks"});
		params.add(new Object[] {3, "Electronics"});
		params.add(new Object[] {4, "Accessory"});
		params.add(new Object[] {5, "Fashion"});
		
		// Using "generated by default as identity(start with 1)" for auto_generated key in HSQL (database.sql) 
		List<Object[]> params = new ArrayList<>();
		params.add(new Object[] {"Foods"});
		params.add(new Object[] {"Drinks"});
		params.add(new Object[] {"Electronics"});
		params.add(new Object[] {"Accessory"});
		params.add(new Object[] {"Fashion"});
		var count = jdbc.batchUpdate("insert into category(name) values(?)", params);
		
		Assertions.assertEquals(5, count.length);
 */


/*

	@Test
	@Order(2)
	void test2() {
		var list = jdbc.query("select * from category", new BeanPropertyRowMapper<Category>(Category.class));
		
		System.out.println(list);
	}


*/