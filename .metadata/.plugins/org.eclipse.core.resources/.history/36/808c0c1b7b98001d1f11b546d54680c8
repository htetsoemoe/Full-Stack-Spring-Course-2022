package com.jdc.location;

import java.util.Optional;
import java.util.stream.Stream;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Sort;
import org.springframework.transaction.annotation.Transactional;

import com.jdc.location.model.entity.State;
import com.jdc.location.model.repo.StateRepo;
import com.jdc.location.services.dto.StateDto;

@SpringBootTest
@Transactional(readOnly = true)
public class LocationServiceTest {

	@Autowired
	private StateRepo stateRepo;
	
	public Stream<State> findByRegionAsStream(String region) {
		return stateRepo.findBy(
				Example.of(
						new State(region),
						ExampleMatcher.matching()
								.withIgnorePaths("id", "porpulation")
				), query -> query.stream());
	}
	
	
	public Optional<StateDto> findFirstByRegion(String region) {
		return stateRepo.findBy(
				Example.of(
							new State(region),
							ExampleMatcher.matching()
								.withIgnorePaths("id", "porpulation")), 
							
							query -> query
								.project("id", "name", "region")
								.as(StateDto.class)
								.sortBy(Sort.by("name")).first());

	}
	
	
}
